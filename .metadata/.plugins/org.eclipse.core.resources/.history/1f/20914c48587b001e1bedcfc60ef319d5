import io.sarl.api.core.Behaviors
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.api.core.Logging
import io.sarl.api.core.Schedules
import java.util.concurrent.atomic.AtomicInteger
import java.io.File
import io.sarl.api.core.ExternalContextAccess

event SearchComplete

agent Child {
	uses DefaultContextInteractions, Logging, Lifecycle

	on Initialize {
		info("Je suis un enfant né dans : ")
		info(occurrence.parameters.get(0));
		killMe
	}
}

agent SearchManager {
	uses DefaultContextInteractions, Lifecycle, Logging
	var searchLocation : String = "C:\\Users\\jossu\\Documents\\Studies\\Belfort\\A23\\IA51\\TP\\TP2-Search\\Search folder";
	var targetType : String = ".sarl";
	
	on Initialize{
		spawn(SearchAgent,0,targetType,searchLocation)
	}
	
	on SearchComplete{
		killMe
	}
	
	
	
}

agent SearchAgent {

	uses Lifecycle, Logging
	
	var id : Integer
	
	var targetType : String
	
	var searchLocation : String

	on Initialize {

		id = occurrence.parameters.get(0) as Integer;
		targetType = occurrence.parameters.get(1) as String;
		searchLocation = occurrence.parameters.get(2) as String;
		
		
		
		loggingName = id as String;
		id = id*10;
		 
		
		var folderPath : String = "C:\\Users\\jossu\\Documents\\Studies\\Belfort\\A23\\IA51\\TP\\TP2-Search\\Search folder";
		var folder : File = new File(folderPath);
		for (file : folder.listFiles()){
			if (file.isDirectory()) {
				spawn(SearchAgent, id++, ,file.path)
			} else {
				info(file.getName());
			}
			
			
		}
		loggingName = "Travail terminé";
		
		
		
		
		killMe
	}

}